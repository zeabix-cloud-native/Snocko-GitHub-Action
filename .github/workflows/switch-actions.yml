name: dast scan workflow

on:
  push:
    branches:
      - main

#  workflow_dispatch:                                            # Run manaual workflows
#    inputs:                                                     
#      switch:
#        description: 'Enable github actions = update secrets to "githubactions both circleci and github actions"
#                      Disable github actions = update secrets to "circleci both circleci and github actions"'
#        required: true
#        default: ''
#        type: choice
#        options:
#        - circleci
#        - githubactions

env:
  owner: "${{ github.repository_owner }}"                       # Get owner name
  CIRCLE_API_TOKEN: '${{ secrets.CIRCLE_API_TOKEN }}'           # Circle API token
  CIRCLECICONTEXTID: '${{ secrets.CIRCLECICONTEXTID }}'         # CIRCLECICONTEXTID secret variable
  switch: ${{ inputs.switch }}                                  # Get value of workflow_dispatch
  GH_TOKEN: ${{ secrets.GH_CMD }}                               # Github organization PAT
  SECRET_NAME: "CICD"                                           # Github secret name

jobs:
  
  check-provider:
    runs-on: ubuntu-latest                                      # OS selection for run
    outputs:
      provider: ${{ steps.providervalue.outputs.PROVIDERVALUE }}
    steps: 
      - name: Check out                                         # step name "Check out" 
        uses: actions/checkout@v3                               # checkout repository
      - name: Check provider value
        shell: bash                                             # Use bash shell
        id: providervalue
        run: |
          export PROVIDERVALUE=$(cat provider.yaml| yq '.provider')
          echo "export PROVIDERVALUE=$(cat provider.yaml| yq '.provider')" >> $GITHUB_OUTPUT
          #echo "$PROVIDERVALUE" >> $GITHUB_OUTPUT
          echo Current Provicer = $PROVIDERVALUE
      
  change-to-circleci:
    runs-on: ubuntu-latest
    needs: check-provider
    steps:
      - name: check status
        if: ${{needs.check-provider.outputs.provider}} == 'circleci'
        shell: bash                                             # Use bash shell
        run: |
          echo ${{needs.check-provider.outputs.provider}}

  change-to-githubactions:
    runs-on: ubuntu-latest
    needs: check-provider
    steps:
      - name: check status
        if: ${{needs.check-provider.outputs.provider}} == 'githubactions'
        shell: bash                                             # Use bash shell
        run: |
          echo ${{needs.check-provider.outputs.provider}}
  
#  switch-actions:                                               # Job name "switch-action"
#    runs-on: ubuntu-latest                                      # OS selection for run
#    needs: check-inputs
#    steps:
#      - name: Check out                                         # step name "Check out" 
#        uses: actions/checkout@v3                               # checkout repository
#      - name: Create root directory                             # step name "Create root directory"
#        run: |                                                  # Run command line
#          mkdir switch-actions                                  # Create directory name switch-actions
#          cd switch-actions                                     # Change directory to switch-actions
#      - name: Enable Github actions workflows                   # step name "Enable Github actions workflows"
#        if: ${{ inputs.switch == 'githubactions'}}              # Condition if input value = githubactions
#        shell: bash                                             # Use bash shell
#        run: |                                                  # Run command line
#          file="repo.txt"
#          while read -r line; do
#              echo "Processing repository $line"
#              mkdir "$line"
#              cd $line
#              echo "echo Get workflows id"
#              gh api \
#              -H "Accept: application/vnd.github+json" \
#              /repos/$owner/$line/actions/workflows | jq '.workflows | .[].id' >> $line-WorkflowId.txt
#              echo "################################################################"
#              echo "echo file $line-WorkflowId before insert string"
#              cat $line-WorkflowId.txt
#              echo "################################################################"
#              echo "/repos/$owner/$line/actions/workflows/" >> $line-WorkflowPath.txt
#              echo "echo file $line-WorkflowPath.txt"
#              cat $line-WorkflowPath.txt
#              echo "################################################################"
#              ## replace workflow id
#              sed -ie 's/^/\/repos\/'$owner'\/'$line'\/actions\/workflows\//' $line-WorkflowId.txt
#              sed -ie 's/$/\/enable/' $line-WorkflowId.txt
#              echo "echo file $line-WorkflowId after insert string"
#              cat $line-WorkflowId.txt
#              echo "################################################################"
#              echo "Enabling $line workflows"
#              file=$line-WorkflowId.txt
#              while read -r ID; do
#                  gh api \
#                   --method PUT \
#                   -H "Accept: application/vnd.github+json" \
#                   $ID
#              done <$file
#              echo "################################################################"
#              echo "Enabled $line workflows"
#              echo "################################################################"
#              cd .. 
#          done <$file
#
#      - name: Disable Github actions workflows                  # step name "Disable Github actions workflows"
#        if: ${{ inputs.switch == 'circleci'}}                   # Condition if input value = circleci
#        shell: bash                                             # Use bash shell
#        run: |                                                  # Run command line
#          file="repo.txt"
#          while read -r line; do
#              echo "Processing repository $line"
#              mkdir "$line"
#              cd $line
#              echo "echo Get workflows id"
#              gh api \
#              -H "Accept: application/vnd.github+json" \
#              /repos/$owner/$line/actions/workflows | jq '.workflows | .[].id' >> $line-WorkflowId.txt
#              echo "################################################################"
#              echo "echo file $line-WorkflowId before insert string"
#              cat $line-WorkflowId.txt
#              echo "################################################################"
#              echo "/repos/$owner/$line/actions/workflows/" >> $line-WorkflowPath.txt
#              echo "echo file $line-WorkflowPath.txt"
#              cat $line-WorkflowPath.txt
#              echo "################################################################"
#              ## replace workflow id
#              sed -ie 's/^/\/repos\/'$owner'\/'$line'\/actions\/workflows\//' $line-WorkflowId.txt
#              sed -ie 's/$/\/disable/' $line-WorkflowId.txt
#              echo "echo file $line-WorkflowId after insert string"
#              cat $line-WorkflowId.txt
#              echo "################################################################"
#              echo "Disabling $line workflows"
#              file=$line-WorkflowId.txt
#              while read -r ID; do
#                  gh api \
#                   --method PUT \
#                   -H "Accept: application/vnd.github+json" \
#                   $ID
#              done <$file
#              echo "################################################################"
#              echo "Disabled $line workflows"
#              echo "################################################################"
#              cd .. 
#          done <$file
#
#      - name: Get Github actions workflows status               # step name "Get Github actions workflows status"
#        shell: bash                                             # Use bash shell
#        run: |                                                  # Run command line
#          file="repo.txt"
#          while read -r line; do
#              cd $line
#              gh api \
#              -H "Accept: application/vnd.github+json" \
#              /repos/$owner/$line/actions/workflows | jq '.workflows | .[].id' >> $line-StatusId.txt
#              echo "Get $line workflows status"
#              file=$line-StatusId.txt
#              while read -r STATUS; do
#                  echo ID=$(gh api \
#                  -H "Accept: application/vnd.github+json" \
#                   /repos/$owner/$line/actions/workflows/$STATUS | jq '.id') 
#                  echo NAME=$(gh api \
#                  -H "Accept: application/vnd.github+json" \
#                   /repos/$owner/$line/actions/workflows/$STATUS | jq '.name')
#                  echo STATUS=$(gh api \
#                  -H "Accept: application/vnd.github+json" \
#                   /repos/$owner/$line/actions/workflows/$STATUS | jq '.state')
#                   echo "----------------------------------------------------------------"
#              done <$file
#              echo "#################################################################"
#              cd .. 
#          done <$file 